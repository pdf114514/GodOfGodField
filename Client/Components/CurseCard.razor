@inherits Card

@{ base.BuildRenderTree(__builder); }

@code {
    [Parameter] public string? Curse { get; set; } // Lowercase

    protected override void OnParametersSet() {
        if (!string.IsNullOrEmpty(Curse)) {
            Showing = true;
            Element = ConvertCurseToElement(Curse);
            if (!string.IsNullOrEmpty(Element)) Element = Element[0..1].ToUpper() + Element[1..];
            ImageStream = Resources.GetResource($"images/curses/medium/{Curse}.png");
            Title = L[$"texts.curseNames.{Curse}"];
            Information = L[$"texts.curseDescriptions.{Curse}"];
        } else {
            Showing = false;
            Element = null;
            ImageStream = null;
            Title = null;
            Information = null;
        }
    }

    string ConvertCurseToElement(string curse) => curse switch {
        ECurse.Cold => EElement.Stone,
        ECurse.Fever => EElement.Fire,
        ECurse.Fog => EElement.Water,
        ECurse.Flash => EElement.Light,
        ECurse.Dream => EElement.Wood,
        ECurse.Darkcloud => EElement.Darkness,
        _ => ""
    };
}