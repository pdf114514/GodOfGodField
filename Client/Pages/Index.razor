@page "/"

<PageTitle>@L["texts.app.title"]</PageTitle>

<style>
    .Content {
        background-size: max(100%, 500px) auto !important;
    }
</style>

<div class="Index">
    <p>@L["texts.home.userName"]</p>
    <input class="InputUserName" type="text" @bind-value="UserName" />
    <div class="ButtonLogin" @onclick="Login">@L["texts.home.setUserName"]</div>
</div>

@code {
    string UserName = string.Empty;

    protected override async Task OnInitializedAsync() {
        await JS.SetBackgroundImage(await JS.GetElementByClassName("Content"), new(Resources.GetResource("images.screens.home.png")!));
        await AppState.Load();
        UserName = AppState.UserName;
    }

    async Task Login() {
        await JS.PlayAudio(new(Resources.GetResource("audio.click.mp3")!));
        AppState.UserName = UserName.Trim();
        await AppState.Save();

        if (string.IsNullOrWhiteSpace(AppState.UserName)) {
            await JS.PlayAudio(new(Resources.GetResource("audio.alert.mp3")!));
            JS.ShowMessage(L["texts.home.userNameEmpty"]);
            return;
        }

        if (string.IsNullOrEmpty(AppState.IdToken)) {
            var signup = await Api.SignUp();
            AppState.IdToken = signup.IdToken;
            AppState.LocalId = signup.LocalId;
            AppState.ExpiresIn = int.Parse(signup.ExpiresIn);
            AppState.RefreshToken = signup.RefreshToken;
            await AppState.Save();
        }

        AccountInfo accountInfo;
        try {
            accountInfo = await Api.GetAccountInfo();
        } catch {
            await Api.Refresh();
            accountInfo = await Api.GetAccountInfo();
        }

        // await JS.Alert(System.Text.Json.JsonSerializer.Serialize(accountInfo));

        Navigation.NavigateTo("/rooms");
    }
}